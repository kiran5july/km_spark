

from pyspark.sql.types import StringType
import pyspark.sql.functions as F

#create dataframe with date
df1 = spark.createDataFrame([("2020-01-01"), ("2020-01-31")], StringType()).toDF("dt")
df2 = df1.withColumn("ts1", F.to_timestamp(F.col("dt"), 'yyyy-MM-dd')) \
         .withColumn("ts2", F.to_timestamp(F.concat(F.col("dt"),F.lit(' 00:00:00')), 'yyyy-MM-dd HH:mm:ss'))

df2.show(5,False)
+----------+-------------------+-------------------+
|dt        |ts1                |ts2                |
+----------+-------------------+-------------------+
|2020-01-01|2020-01-01 00:00:00|2020-01-01 00:00:00|
|2020-01-31|2020-01-31 00:00:00|2020-01-31 00:00:00|
+----------+-------------------+-------------------+

df2.printSchema()
root
 |-- dt: string (nullable = true)
 |-- ts1: timestamp (nullable = true)
 |-- ts2: timestamp (nullable = true)


#create dataframe with datetime

df_time1 = spark.createDataFrame([("2020-01-01 08:33:33"), ("2020-01-31 07:03:44")], StringType()).toDF("dt")
df_time2 = df_time1.withColumn("ts", F.to_timestamp(F.col("dt"), 'yyyy-MM-dd HH:mm:ss'))

df_time2.show(5,False)
+-------------------+-------------------+
|dt                 |ts                 |
+-------------------+-------------------+
|2020-01-01 08:33:33|2020-01-01 08:33:33|
|2020-01-31 07:03:44|2020-01-31 07:03:44|
+-------------------+-------------------+

df_time2.printSchema()
root
 |-- dt: string (nullable = true)
 |-- ts: timestamp (nullable = true)


#filter on date
df2.filter(F.col('dt').between('2020-01-01','2020-01-31')).show(5,False)
+----------+-------------------+-------------------+
|dt        |ts1                |ts2                |
+----------+-------------------+-------------------+
|2020-01-01|2020-01-01 00:00:00|2020-01-01 00:00:00|
|2020-01-31|2020-01-31 00:00:00|2020-01-31 00:00:00|
+----------+-------------------+-------------------+


#filter on datetime string
df_time2.filter(F.col('dt').between('2020-01-01','2020-01-31')).show(5,False)
+-------------------+-------------------+
|dt                 |ts                 |
+-------------------+-------------------+
|2020-01-01 08:33:33|2020-01-01 08:33:33|
+-------------------+-------------------+

df_time2.filter(F.col('dt').between('2020-01-01','2020-01-31 23:59:59')).show(5,False)
+-------------------+-------------------+
|dt                 |ts                 |
+-------------------+-------------------+
|2020-01-01 08:33:33|2020-01-01 08:33:33|
|2020-01-31 07:03:44|2020-01-31 07:03:44|
+-------------------+-------------------+

#filter on datetime timestamp
df_time2.filter(F.col('ts').between('2020-01-01','2020-01-31')).show(5,False)
+-------------------+-------------------+
|dt                 |ts                 |
+-------------------+-------------------+
|2020-01-01 08:33:33|2020-01-01 08:33:33|
+-------------------+-------------------+

>>> df_time2.filter(F.col('ts').between('2020-01-01','2020-01-31 23:59:59')).show(5,False)
+-------------------+-------------------+
|dt                 |ts                 |
+-------------------+-------------------+
|2020-01-01 08:33:33|2020-01-01 08:33:33|
|2020-01-31 07:03:44|2020-01-31 07:03:44|
+-------------------+-------------------+
